language: cpp

stages:
  - name: basic
    if: branch != master
  - name: full linux
    if: branch = master
  - name: singularity build push
    if: branch = master OR tag IS present

env:
  global:
    - DISPLAY=":99.0"

services:
  - xvfb

jobs:
  allow_failures:
    - stage: singularity build push
  include:
    - stage: basic
      env: PYTHON_VERSION="3.7.5" COMPILER="gcc" GCCv="6"
    - stage: full linux
      os: linux
      env: PYTHON_VERSION="3.7.5" COMPILER="gcc" GCCv="8"
    - stage: full linux
      os: linux
      env: PYTHON_VERSION="3.7.5" COMPILER="gcc" GCCv="7"
    - stage: full linux
      os: linux
      env: PYTHON_VERSION="3.7.5" COMPILER="gcc" GCCv="6"
    - stage: full linux
      os: linux
      env: PYTHON_VERSION="3.6.9" COMPILER="gcc" GCCv="6"
    - stage: singularity build push
      env: PYTHON_VERSION="3.7.5"
      language: go
      go: "1.13"
      git: { submodules: false, depth: 1 }
      addons:
        apt:
          packages: [ flawfinder, squashfs-tools, uuid-dev, libuuid1, libffi-dev, libssl-dev, libssl1.0.0, libarchive-dev, libgpgme11-dev, libseccomp-dev ]
        homebrew: { packages: [ squashfs ], update: true }
      before_install: skip
      install:
        - SINGULARITY_BASE="${GOPATH}/src/github.com/sylabs/singularity"
        - export PATH="${GOPATH}/bin:${PATH}"
        - mkdir -p "${GOPATH}/src/github.com/sylabs"
        - cd "${GOPATH}/src/github.com/sylabs"
        - git clone -b v3.5.0 https://github.com/sylabs/singularity
        - cd singularity
        - ./mconfig -v -p /usr/local
        - make -j `nproc 2>/dev/null || echo 1` -C ./builddir all
        - sudo make -C ./builddir install
      before_script:
          #  token used for push commnad
        - echo -e "$SYLABS_TOKEN" > token
        - singularity remote login --tokenfile ./token || exit 1
          #  key used for image signing
          #  for travis ci pgp key block you must replace newline with '\\n', and replace spaces with '\ '
        - echo -e "$SINGULARITY_KEY" > skey
        - head -n 4 ./skey
        - echo $SINGULARITY_KEY_PW | singularity key import ./skey || exit 1
      script:
        - cd $TRAVIS_BUILD_DIR
        - export SINGULARITYENV_PYTHON_VERSION=$PYTHON_VERSION
        - export SINGULARITYENV_GIT_COMMIT_HASH=$TRAVIS_COMMIT
        - sudo singularity build ./extra-foam.sif extra-foam.def
      after_script:
        - echo $SINGULARITY_KEY_PW | singularity sign ./extra-foam.sif
        - singularity push ./extra-foam.sif library://robert.rosca/default/extra-foam:$TRAVIS_BRANCH

before_install:
  - export GXX="g++-$GCCv" GCC="gcc-$GCCv"
  - sudo -E apt-add-repository -y "ppa:ubuntu-toolchain-r/test"
  - sudo apt-get -q update
  - sudo -E apt-get -yq --no-install-suggests --no-install-recommends $(travis_apt_get_options) install libxkbcommon-x11-0 $GXX
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/$GXX 0
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/$GCC 0
  - g++ --version
  - gcc --version
  - wget "http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh" -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
install:
  - conda install -y python=$PYTHON_VERSION
  - echo $PYTHON_VERSION
  - conda install -y cmake numpy -c anaconda
  - conda install -y -c conda-forge "tbb-devel<2021.1"
  - export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"}
  - pip install -e .[test]
before_script:
  - /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1400x900x24
  - sleep 3
script:
  # test parallel version
  - python setup.py build_ext --inplace --with-tests
  - python setup.py test -v
  - python setup.py benchmark -v

  # test series version
  - export BUILD_SERIAL_FOAM=1
  - python setup.py build_ext --inplace --with-tests
  - python setup.py test -v
  - python setup.py benchmark -v
